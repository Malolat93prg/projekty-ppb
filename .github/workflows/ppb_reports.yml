name: PPB Reports

on:
  schedule:
    - cron: "0 * * * *"   # co godzinę (UTC) – raport do repo
  workflow_dispatch:       # ręczne uruchomienie

permissions:
  contents: write

jobs:
  hourly_report:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Generate hourly report
        run: |
          python tools/generate_report.py

      - name: Commit & push hourly report
        run: |
          git config user.name "PPB Bot"
          git config user.email "github93@wp.pl"
          git add -A
          git commit -m "Update hourly report" || echo "No changes"
          git pull --rebase --autostash
          git push

  # E-mail raz dziennie o 20:00 czasu Warszawy
  daily_email:
    runs-on: ubuntu-latest
    # uruchamiamy job tylko gdy lokalna godzina Warszawy = 20
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Generate daily report
        run: |
          python tools/generate_report.py --daily

      - name: Check local time == 20 (**)
        run: |
          python - <<'PY'
          from datetime import datetime
          import zoneinfo, sys
          now = datetime.now(zoneinfo.ZoneInfo("Europe/Warsaw"))
          print("Local hour:", now.hour)
          sys.exit(0 if now.hour == 20 else 78)
          PY

      - name: Send report via email (with attachments)
        if: ${{ success() }}
        env:
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          MAIL_FROM: ${{ secrets.MAIL_FROM }}
          MAIL_TO: ${{ secrets.MAIL_TO }}
        run: |
          python tools/email_sender_attach.py

      - name: Commit & push daily confirmation
        if: ${{ success() }}
        run: |
          git config user.name "PPB Bot"
          git config user.email "github93@wp.pl"
          git add -A
          git commit -m "Daily report email sent [skip ci]" || echo "No changes"
          git pull --rebase --autostash
          git push
